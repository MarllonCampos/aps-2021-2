import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
type IWeather  = {
  id: number,
  name: string,
  state: string,
  country: string,
  data: {
      temperature: number,
      wind_direction: string,
      wind_velocity: number,
      humidity: number,
      condition: string,
      pressure: number,
      icon: string,
      sensation: number,
      date: string
    }
  }
interface IProps {
  props: any
  weather: IWeather
}

export default function Home({weather, ...props}: IProps){
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
    {console.log(weather)}
      <h1 className={styles.city}>{weather.name}</h1>
      <h4 className={styles.date}>{weather.data.date}</h4>

      <Image src="" alt="" className={styles.weather} />

      <p className={styles.todayCondition}></p>


    </div>
  )
}


export const getStaticProps = async () => {
  const URL_API = process.env.URL_API || 'http://localhost:3003'
  const response = await fetch(`${URL_API}/weather`)
  const data: IWeather = await response.json()
  const today = new Date()
  const ptbrDate = getFormattedDate(today)

  function getFormattedDate(date: Date) {
    const year = date.getFullYear();
    const month = (1 + date.getMonth()).toString().padStart(2, '0');
    const day = date.getDate().toString().padStart(2, '0');
  
    return day + '/' + month + '/' + year;
  }

  let formatData = {
    ...data,
    data: {
      ...data.data,
      date: ptbrDate
    }
  }
  return {
    props: {
      weather:formatData,
    }
  }
}